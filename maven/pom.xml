<?xml version="1.0" encoding="UTF-8" ?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
>
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.freemind</groupId>
  <artifactId>freemind-modern</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>FreeMind (Maven build scaffold)</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
    <!-- Skip compiling and running tests by default to keep the scaffold lean. -->
    <maven.test.skip>true</maven.test.skip>
    <!-- Path used by the prebuilt-bindings profile -->
    <bindings.jar.path>${project.basedir}/../freemind/lib/bindings.jar</bindings.jar.path>
    <!-- Root directory for generated bindings (renamable) -->
    <bindings.gen.dir>${project.build.directory}/binding/src</bindings.gen.dir>
  </properties>

  <build>
    <!-- Compile directly from the existing source tree -->
    <sourceDirectory>../freemind</sourceDirectory>
    <testSourceDirectory>../freemind/tests</testSourceDirectory>

    <plugins>
      <!-- Standard jar packaging (bindings jar added in profile) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <!-- Mirror Ant build: exclude non-source areas -->
          <excludes>
            <exclude>binding/**</exclude>
            <exclude>binding.old/**</exclude>
            <exclude>plugins/**</exclude>
            <exclude>accessories/plugins/**</exclude>
            <exclude>tests/**</exclude>
            <exclude>bin/**</exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- Keep tests optional for now; they can be wired later -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <!-- JUnit 3 tests live in a non-standard layout; keep execution off by default. -->
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- Local libraries from freemind/lib (system-scoped to avoid fetching from Maven Central). -->
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.10.3</version>
      <scope>system</scope>
      <systemPath
            >${project.basedir}/../freemind/lib/jsoup-1.10.3.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>com.jgoodies</groupId>
      <artifactId>jgoodies-forms</artifactId>
      <version>1.8.0</version>
      <scope>system</scope>
      <systemPath
            >${project.basedir}/../freemind/lib/jgoodies-forms-1.8.0.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>com.jgoodies</groupId>
      <artifactId>jgoodies-common</artifactId>
      <version>1.8.1</version>
      <scope>system</scope>
      <systemPath
            >${project.basedir}/../freemind/lib/jgoodies-common-1.8.1.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>com.oreo</groupId>
      <artifactId>jortho</artifactId>
      <version>1.0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../freemind/lib/jortho.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <version>2.7.2</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../freemind/lib/xalan.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>apache</groupId>
      <artifactId>serializer</artifactId>
      <version>2.7.2</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../freemind/lib/serializer.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../freemind/lib/xml-apis.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>2.11.0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../freemind/lib/xercesImpl.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>gnu.regexp</groupId>
      <artifactId>gnu-regexp</artifactId>
      <version>1.1.4</version>
      <scope>system</scope>
      <systemPath
            >${project.basedir}/../freemind/lib/SimplyHTML/gnu-regexp-1.1.4.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>de.sciss</groupId>
      <artifactId>simplyhtml</artifactId>
      <version>1.0</version>
      <scope>system</scope>
      <systemPath
            >${project.basedir}/../freemind/lib/SimplyHTML/SimplyHTML.jar</systemPath>
    </dependency>

    <!-- JiBX runtime used by the application -->
    <dependency>
      <groupId>org.jibx</groupId>
      <artifactId>jibx-run</artifactId>
      <version>1.3.3</version>
      <scope>system</scope>
      <systemPath
            >${project.basedir}/../freemind/lib/jibx/jibx-run.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>org.ogce</groupId>
      <artifactId>xpp3</artifactId>
      <version>1.1.4c</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../freemind/lib/jibx/xpp3.jar</systemPath>
    </dependency>

    <!-- JUnit (tests are disabled by default here) -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.2</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../freemind/lib/junit.jar</systemPath>
    </dependency>
  </dependencies>

  <profiles>
    <!-- Prefer the prebuilt bindings when present on disk. -->
    <profile>
      <id>use-prebuilt-bindings</id>
      <activation>
        <file>
          <exists>${project.basedir}/../freemind/lib/bindings.jar</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.freemind</groupId>
          <artifactId>freemind-bindings</artifactId>
          <version>1.0</version>
          <scope>system</scope>
          <systemPath>${bindings.jar.path}</systemPath>
        </dependency>
      </dependencies>
    </profile>
    
    <!-- If the prebuilt bindings.jar is missing, regenerate fully under target/. -->
    <profile>
      <id>regen-bindings</id>
      <activation>
        <file>
          <missing>${project.basedir}/../freemind/lib/bindings.jar</missing>
        </file>
      </activation>
      <!-- No system dependency: generated sources compile into this module -->
      <properties>
        <!-- Avoid compiling or running tests in this profile -->
        <maven.test.skip>true</maven.test.skip>
      </properties>
      <build>
        <plugins>
          <!-- 1) Stage input XSD into target/ -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <id>copy-xsd-and-encoder</id>
                <phase>initialize</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <resources>
                    <!-- freemind_actions.xsd for source generation -->
                    <resource>
                      <directory>${project.basedir}/../freemind</directory>
                      <includes>
                        <include>freemind_actions.xsd</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Ensure stale copies from earlier runs are gone -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>purge-stale-stringencoder</id>
                <phase>initialize</phase>
                <configuration>
                  <target>
                    <delete file="${bindings.gen.dir}/de/foltin/StringEncoder.java" quiet="true"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- 2) Bootstrap-compile the generator (only de/foltin/**) before main compile -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.11.0</version>
            <executions>
              <execution>
                <id>bootstrap-generator</id>
                <phase>initialize</phase>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>de/foltin/**</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- 3) Run the custom generator to materialize binding/src + binding.xml under target/ -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>generate-binding-sources</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>
                    <argument>-Dbindings.gen.dir=${bindings.gen.dir}</argument>
                    <argument>-cp</argument>
                    <argument>${project.build.outputDirectory}</argument>
                    <argument>de.foltin.CompileXsdStart</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- 4) Add generated sources before main compile runs -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.5.0</version>
            <executions>
              <execution>
                <id>add-generated-binding-sources</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${bindings.gen.dir}</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- 4) Bind classes using JiBX plugin against the generated binding.xml -->
          <plugin>
            <groupId>org.jibx</groupId>
            <artifactId>jibx-maven-plugin</artifactId>
            <version>1.3.3</version>
            <executions>
              <execution>
                <id>jibx-bind-generated</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>bind</goal>
                </goals>
                <configuration>
                  <!-- Where binding.xml is generated -->
                  <schemaBindingDirectory>${bindings.gen.dir}</schemaBindingDirectory>
                  <includeSchemaBindings>**/binding.xml</includeSchemaBindings>
                  <verbose>false</verbose>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- 5) Package only the generated instance classes into a bindings jar under target/ -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>package-bindings-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <classifier>bindings</classifier>
                  <includes>
                    <include>freemind/controller/actions/generated/instance/**</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
